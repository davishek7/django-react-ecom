{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";import{productListReducer,productDetailsReducer}from\"./reducers/productReducers\";import{cartReducer}from\"./reducers/cartReducers\";import{userLoginReducer}from\"./reducers/userReducers\";var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer,userLogin:userLoginReducer});var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):[];var initialState={cart:{cartItems:cartItemsFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/home/davishek7/Desktop/Ecommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OACEC,kBADF,CAEEC,qBAFF,KAGO,4BAHP,CAIA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,gBAAT,KAAiC,yBAAjC,CAGA,GAAMC,CAAAA,OAAO,CAAGR,eAAe,CAAC,CAC9BS,WAAW,CAAEL,kBADiB,CAE9BM,cAAc,CAAEL,qBAFc,CAG9BM,IAAI,CAACL,WAHyB,CAI9BM,SAAS,CAACL,gBAJoB,CAAD,CAA/B,CAOA,GAAMM,CAAAA,oBAAoB,CAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACrBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADqB,CAC2B,EADtD,CAGA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CAExB,EAFJ,CAIA,GAAMI,CAAAA,YAAY,CAAG,CACnBR,IAAI,CAAG,CAACS,SAAS,CAAEP,oBAAZ,CADY,CAEnBD,SAAS,CAAC,CAACS,QAAQ,CAACH,mBAAV,CAFS,CAArB,CAIA,GAAMI,CAAAA,UAAU,CAAG,CAACpB,KAAD,CAAnB,CACA,GAAMqB,CAAAA,KAAK,CAAGxB,WAAW,CACvBS,OADuB,CAEvBW,YAFuB,CAGvBhB,mBAAmB,CAACF,eAAe,MAAf,QAAmBqB,UAAnB,CAAD,CAHI,CAAzB,CAMA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer } from \"./reducers/userReducers\";\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart:cartReducer,\n  userLogin:userLoginReducer,\n});\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems') ?\n      JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : [];\n\nconst initialState = {\n  cart : {cartItems :cartItemsFromStorage},\n  userLogin:{userInfo:userInfoFromStorage},\n};\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}