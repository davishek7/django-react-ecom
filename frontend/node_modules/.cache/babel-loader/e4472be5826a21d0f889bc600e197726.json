{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/davishek7/Desktop/Ecommerce/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAsBC,gBAAtB,QAA6C,4BAA7C;AAIA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KAA+B;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,YAAMO,IAAI,GAACF,MAAM,CAACG,OAAlB;AACA,YAAMC,SAAS,GAACN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA3C,CAAhB;;AAEA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAC3BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAwCI,CADlC;AAFR,SAAN;AAMH,OAPD,MAOK;AACD,eAAM,EACF,GAAGR,KADD;AACOC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBG,IAApB;AADjB,SAAN;AAGH;;AACL,SAAKN,gBAAL;AACI,aAAM,EACF,GAAGE,KADD;AAEFC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAYP,MAAM,CAACG,OAA7C;AAFR,OAAN;;AAKJ;AACI,aAAOL,KAAP;AAxBR;AA2BH,CA5BM","sourcesContent":["import {CART_ADD_ITEM,CART_REMOVE_ITEM} from '../constants/cartConstants'\n\n\n\nexport const cartReducer=(state={cartItems:[]},action)=>{\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item=action.payload\n            const existItem=state.cartItems.find(x=>x.product === item.product)\n\n            if(existItem){\n                return{\n                    ...state,\n                    cartItems:state.cartItems.map(x=>\n                        x.product === existItem.product ? item :x\n                    )\n                    }\n            }else{\n                return{\n                    ...state,cartItems:[...state.cartItems,item]\n            }\n            }\n        case CART_REMOVE_ITEM:\n            return{\n                ...state,\n                cartItems:state.cartItems.filter(x=>x.product!==action.payload)\n            }\n        \n        default:\n            return state\n    }\n\n}"]},"metadata":{},"sourceType":"module"}